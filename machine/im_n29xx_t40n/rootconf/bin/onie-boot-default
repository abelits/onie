#!/bin/sh

this_script=$(basename $(realpath $0))
lib_dir="$(dirname $(realpath $0))/../lib/onie"

args="o:d:lhvq"

usage()
{
    echo "usage: $this_script [-d <menu entry>] [-o <onie_mode>] [-lhvq]"
    cat <<EOF
Get or set the default GRUB boot entry.  The default is to show
the current default entry.

You cannot specify both the -d and -o options at the same time.

COMMAND LINE OPTIONS

	-d
		Set the default GRUB boot entry to "menu entry".  You
		need to know the complete menu entry string.

	-o
		Set the default GRUB boot entry to a particular "ONIE
		mode".  Available ONIE modes are:

		install   -- ONIE OS installer mode
		rescue    -- ONIE rescue mode
		uninstall -- ONIE OS uninstall mode
		update    -- ONIE self update mode
		none      -- Do not boot into ONIE.  Pass through to OS.

                Some platforms may offer additional modes.  Check with
                your hardware vendor.

                Note: The ONIE modes take precedence over the user
                defaults set with the -d option.

                Note: The 'none' setting disables any previously set
                ONIE mode.  The boot flows through to the default menu
                entry set with the -d option.

	-l
		List the current default entry.  This is the default.

	-h
		Help.  Print this message.

	-q
		Quiet.  No printing, except for errors.

	-v
		Be verbose.  Print what is happening.
EOF
}


user_default=
onie_mode=
list=
quiet=no
verbose=no
cmd_verbose=

while getopts "$args" a ; do
    case $a in
        h)
            usage
            exit 0
            ;;
        v)
            verbose=yes
            cmd_verbose=-v
            ;;
        l)
            list=yes
            ;;
        d)
            user_default="$OPTARG"
            ;;
        o)
            onie_mode="$OPTARG"
            ;;
        q)
            quiet=yes
            ;;
        *)
            echo "Unknown argument: $a"
            usage
            exit 1
    esac
done

[ "$verbose" = "yes" ] && quiet=no

if [ -n "$user_default" ] && [ -n "$onie_mode" ] ; then
    echo "ERROR: Only one of -d and -o can be specified at a time"
    usage
    exit 1
fi

[ -r "$lib_dir/onie-blkdev-common" ] || {
    echo "ERROR: Unable to find onie-blkdev-common"
    exit 1
}
. $lib_dir/onie-blkdev-common

[ "$verbose" = "yes" ] && echo "Mounting ONIE partitions ..."
onie_mount_partitions write || {
    echo "ERROR: Unable to mount ONIE partitions"
    exit 1
}

onie_mode_file="$onie_config_dir/onie_boot_reason"
if [ -n "$onie_mode" ] ; then
    case "$onie_mode" in
        install|uninstall|rescue|update)
            [ "$verbose" = "yes" ] && echo "Setting ONIE mode to: $onie_mode"
            # Set ONIE boot mode
            echo "$onie_mode" > "$onie_mode_file"
            ;;
        none)
            # Remove any ONIE boot mode setting
            [ "$verbose" = "yes" ] && echo "Removing any previously set ONIE mode"
            rm -f "$onie_mode_file"
            ;;
        *)
            echo "ERROR: Unknown ONIE mode: $onie_mode"
            exit 1
    esac

    [ "$quiet" = "no" ] && echo "Success: Run \`onie-boot-update' to make changes take effect."

fi

user_default_file="$onie_config_dir/onie_default"
if [ -n "$user_default" ] ; then
    # Set user default menu entry
    [ "$verbose" = "yes" ] && echo "Setting default GRUB menu entry to: $user_default"
    echo "$user_default" > "$user_default_file"

    [ "$quiet" = "no" ] && echo "Success: Run \`onie-boot-update' to make changes take effect."

fi

if [ -z "$user_default" -a -z "$onie_mode" ] || [ "$list" = "yes" ] ; then
    # Find default image 

    if [ -r "$onie_mode_file" ] ; then
        # The ONIE boot mode takes precedence
        default="ONIE mode: $(cat $onie_mode_file)"
    else
        if [ -r "$user_default_file" ] ; then
            default="$(cat $user_default_file)"
        else
            # If neither the ONIE boot mode or user default is set the
            # fallback is ONIE installer mode.
            default="ONIE mode: install"
        fi
    fi

    echo "Default boot image: $default"

fi

[ "$verbose" = "yes" ] && echo "Un-mounting ONIE partitions ..."
onie_umount_partitions
    
exit 0
