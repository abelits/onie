#!/bin/sh

this_script=$(basename $(realpath $0))
lib_dir="$(dirname $(realpath $0))/../lib/onie"

args="n:lhv"

usage()
{
    echo "usage: $this_script [-l] [-n <entry_name>] [-hv]"
    cat <<EOF
Show GRUB configuration entries.

The default is to list all the configuration entry names.

COMMAND LINE OPTIONS

	-l
		List all the GRUB configuration entry names.
		This is the default.

	-n      Dump the contents of GRUB entry "name".
		Cannot be combined with the -l option.

	-h
		Help.  Print this message.

	-v
		Be verbose.  Print what is happening.
EOF
}

entry_name=
list_all=no
verbose=no
cmd_verbose=

while getopts "$args" a ; do
    case $a in
        h)
            usage
            exit 0
            ;;
        v)
            verbose=yes
            cmd_verbose=-v
            ;;
        l)
            list_all=yes
            ;;
        n)
            entry_name="$OPTARG"
            ;;
        *)
            echo "Unknown argument: $a"
            usage
            exit 1
    esac
done

if [ -n "$entry_name" ] && [ "$list_all" = "yes" ] ; then
    echo "ERROR: The -l and -n options cannot both be specified"
    usage
    exit 1
fi

[ -r "$lib_dir/onie-blkdev-common" ] || {
    echo "ERROR: Unable to find onie-blkdev-common"
    exit 1
}
. $lib_dir/onie-blkdev-common

[ "$verbose" = "yes" ] && echo "Mounting ONIE partitions ..."
onie_mount_partitions || {
    echo "ERROR: Unable to mount ONIE partitions"
    exit 1
}

if [ -n "$entry_name" ] ; then
    [ -r "$onie_config_dir/grub.d/$entry_name" ] || {
        echo "ERROR: Unable to read entry: $entry_name"
        echo "For a list of available entries use the -l argument."
        exit 1
    }
    cat "$onie_config_dir/grub.d/$entry_name"
else
    echo "Available GRUB entry names:"
    for n in $(ls "$onie_config_dir/grub.d" 2>/dev/null) ; do
        printf "\t%s\n" "$n"
    done
fi

[ "$verbose" = "yes" ] && echo "Un-mounting ONIE partitions ..."
onie_umount_partitions
